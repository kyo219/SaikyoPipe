[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "lgbopt"
version = "0.1.0"
description = "A LightGBM and Optuna pipeline for easy model optimization"
readme = "README.md"
authors = [
    { name = "Your Name", email = "your.email@example.com" },
]
license = { file = "LICENSE" }
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["machine learning", "lightgbm", "optuna", "optimization", "hyperparameter tuning"]
dependencies = [
    "numpy>=1.20.0",
    "pandas>=1.3.0",
    "scikit-learn>=1.0.0",
    "lightgbm>=3.3.0",
    "optuna>=3.0.0",
    "matplotlib>=3.4.0",
    "seaborn>=0.11.0",
]
requires-python = ">=3.10"

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=3.0",
    "black>=22.0",
    "isort>=5.0",
    "mypy>=0.9",
    "flake8>=4.0",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
    "myst-parser>=0.18",
]

[project.urls]
Homepage = "https://github.com/yourusername/lgbopt"
Documentation = "https://lgbopt.readthedocs.io/"
Repository = "https://github.com/yourusername/lgbopt.git"
Issues = "https://github.com/yourusername/lgbopt/issues"

[tool.poetry]
name = "lgbopt"
version = "0.1.0"
description = "A LightGBM and Optuna pipeline for easy model optimization"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "lgbopt", from = "src"}]
repository = "https://github.com/yourusername/lgbopt"

[tool.poetry.dependencies]
python = ">=3.10,<3.12"
numpy = ">=1.20.0"
pandas = ">=1.3.0"
scikit-learn = ">=1.0.0"
lightgbm = ">=3.3.0"
optuna = ">=3.0.0"
matplotlib = ">=3.4.0"
seaborn = ">=0.11.0"
shap = "^0.46.0"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.0"
pytest-cov = ">=3.0"
black = ">=22.0"
isort = ">=5.0"
mypy = ">=0.9"
flake8 = ">=4.0"
jupyterlab = "^4.0.0"
ipykernel = "^6.0.0"

[tool.poetry.group.docs.dependencies]
sphinx = ">=4.0"
sphinx-rtd-theme = ">=1.0"
myst-parser = ">=0.18"

[tool.hatch.build.targets.wheel]
packages = ["src/lgbopt"]

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "--cov=lgbopt --cov-report=term-missing"
filterwarnings = ["ignore::DeprecationWarning"] 